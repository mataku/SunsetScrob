apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'realm-android'
apply plugin: 'deploygate'
apply plugin: 'com.github.ben-manes.versions'
apply plugin: 'kotlin-kapt'
apply plugin: 'com.cookpad.android.licensetools'
apply from: 'lint-checks.gradle'

android {
    compileSdkVersion 27
    buildToolsVersion '27.0.3'

    dataBinding {
        enabled = true
    }
    signingConfigs {
        release {
            storeFile file('../SunsetScrob.jks')
            storePassword System.getenv('SUNSET_STORE_PASSWORD')
            keyAlias System.getenv('SUNSET_KEY_ALIAS')
            keyPassword System.getenv('SUNSET_KEY_PASSWORD')
        }
    }
    defaultConfig {
        applicationId "com.mataku.scrobscrob"

        minSdkVersion 24
        targetSdkVersion 27
        versionCode 9
        versionName "0.0.9"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        def properties = new Properties()
        properties.load(project.rootProject.file('local.properties').newDataInputStream())
        buildConfigField 'String', 'API_KEY', properties.API_KEY
        buildConfigField 'String', 'SHARED_SECRET', properties.SHARED_SECRET
        vectorDrawables.useSupportLibrary = true
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
        debug {
            applicationIdSuffix '.dev'
        }
    }
    lintOptions {
        abortOnError false
        textReport true
        textOutput 'stdout'
        xmlReport false
        check lintchecks
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    androidTestImplementation('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })

    def support_library_version = "27.1.1"
    implementation "com.android.support:appcompat-v7:$support_library_version"
    implementation "com.android.support:cardview-v7:$support_library_version"
    implementation "com.android.support:customtabs:$support_library_version"
    implementation "com.android.support:design:$support_library_version"

    def okhttp3_version = "3.4.1"
    implementation "com.squareup.okhttp3:logging-interceptor:$okhttp3_version"
    implementation "com.squareup.okhttp3:okhttp:$okhttp3_version"

    def kotlin_coroutines_version = '0.22.5'
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$kotlin_coroutines_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$kotlin_coroutines_version"

    def retrofit_version = '2.4.0'
    implementation "com.squareup.retrofit2:retrofit:$retrofit_version"
    implementation "com.squareup.retrofit2:converter-moshi:$retrofit_version"
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"

    implementation 'com.android.support.constraint:constraint-layout:1.1.0'
    implementation 'com.google.code.gson:gson:2.8.2'
    implementation 'io.reactivex.rxjava2:rxjava:2.1.9'
    implementation 'com.github.keithyokoma:RemoteViewsReader:1.2.0@aar'

    def glide_version = '4.6.1'
    implementation "com.github.bumptech.glide:glide:$glide_version"
    kapt "com.github.bumptech.glide:compiler:$glide_version"
    implementation('jp.wasabeef:glide-transformations:3.3.0') {
        exclude module: 'com.github.bumptech.glide'
    }

    def epoxy_version = '2.12.0'
    implementation "com.airbnb.android:epoxy:$epoxy_version"
    implementation "com.airbnb.android:epoxy-databinding:${epoxy_version}"
    kapt "com.airbnb.android:epoxy-processor:$epoxy_version"

    def kotshi_version = '1.0.3'
    implementation "se.ansman.kotshi:api:$kotshi_version"
    kapt "se.ansman.kotshi:compiler:$kotshi_version"

    implementation 'io.realm:android-adapters:2.1.1'
    implementation 'com.jakewharton.retrofit:retrofit2-kotlin-coroutines-experimental-adapter:1.0.0'

    testImplementation 'junit:junit:4.12'
    testImplementation 'com.google.guava:guava:22.0'
    testImplementation "org.jetbrains.kotlin:kotlin-test-junit:$kotlin_version"
    testImplementation 'org.robolectric:robolectric:3.6.1'
    testImplementation "com.squareup.okhttp3:mockwebserver:$okhttp3_version"
}
repositories {
    mavenCentral()
    maven {
        url 'https://maven.google.com'
    }
}

kapt {
    correctErrorTypes = true
}

dependencyUpdates.resolutionStrategy = {
    componentSelection { rules ->
        rules.all { ComponentSelection selection ->
            boolean rejected = ['alpha', 'beta', 'rc', 'cr', 'm'].any { qualifier ->
                selection.candidate.version ==~ /(?i).*[.-]${qualifier}[.\d-]*/
            }
            if (rejected) {
                selection.reject('Release candidate')
            }
        }
    }
}
kotlin {
    experimental {
        coroutines "enable"
    }
}
